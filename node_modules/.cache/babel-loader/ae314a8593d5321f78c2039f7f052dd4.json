{"ast":null,"code":"var _jsxFileName = \"/home/aluno/joelclock/2020-clock/src/Components/Clock/WorldClock.js\";\nimport React, { Component } from 'react';\n\nclass WorldClock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      local: props.local ? props.local : \"America/Fortaleza\",\n      date: null\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 2000);\n  }\n\n  tick() {\n    let {\n      local\n    } = this.state;\n    let url = \"http://worldtimeapi.org/api/timezone/\" + local;\n    fetch(url).then(res => res.json()).then(result => {\n      console.log(result.datetime);\n      this.setState({\n        isLoaded: true,\n        date: result.datetime\n      });\n    }, // Nota: É importante lidar com os erros aqui\n    // em vez de um bloco catch() para não recebermos\n    // exceções de erros dos componentes.\n    error => {\n      this.setState({\n        isLoaded: false,\n        date: null,\n        error\n      });\n    });\n  }\n\n  render() {\n    let {\n      isLoaded,\n      date,\n      error,\n      local\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"World clock :/ (\", error.message, \")\"));\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"World clock is loading...\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, local ? local : \"World clock\", \" is \", date, \".\"));\n    }\n  }\n\n}\n\nexport default WorldClock;","map":{"version":3,"sources":["/home/aluno/joelclock/2020-clock/src/Components/Clock/WorldClock.js"],"names":["React","Component","WorldClock","constructor","props","state","error","isLoaded","local","date","componentDidMount","timerID","setInterval","tick","url","fetch","then","res","json","result","console","log","datetime","setState","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACI,KAApB,GAA4B,mBAHxB;AAIXC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID;;AAEDA,EAAAA,IAAI,GAAG;AACL,QAAI;AAACL,MAAAA;AAAD,QAAU,KAAKH,KAAnB;AACA,QAAIS,GAAG,GAAG,0CAA0CN,KAApD;AACAO,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,QAAnB;AACA,WAAKC,QAAL,CAAc;AACZhB,QAAAA,QAAQ,EAAE,IADE;AAEZE,QAAAA,IAAI,EAAEU,MAAM,CAACG;AAFD,OAAd;AAID,KATH,EAUE;AACA;AACA;AACChB,IAAAA,KAAD,IAAW;AACT,WAAKiB,QAAL,CAAc;AACZhB,QAAAA,QAAQ,EAAE,KADE;AAEZE,QAAAA,IAAI,EAAE,IAFM;AAGZH,QAAAA;AAHY,OAAd;AAKD,KAnBH;AAqBH;;AAECkB,EAAAA,MAAM,GAAG;AACP,QAAI;AAACjB,MAAAA,QAAD;AAAWE,MAAAA,IAAX;AAAiBH,MAAAA,KAAjB;AAAwBE,MAAAA;AAAxB,QAAiC,KAAKH,KAA1C;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqBA,KAAK,CAACmB,OAA3B,MADM,CAAR;AAGD,KAJD,MAIO,IAAI,CAAClB,QAAL,EAAe;AACpB,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADM,CAAR;AAGD,KAJM,MAIA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,KAAK,GAAGA,KAAH,GAAW,aAArB,UAAwCC,IAAxC,MADF,CADF;AAKD;AACF;;AA7D8B;;AAgEnC,eAAeP,UAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass WorldClock extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        local: props.local ? props.local : \"America/Fortaleza\",\n        date: null\n      };\n    }\n\n    componentDidMount() {\n      this.timerID = setInterval(\n        () => this.tick(),\n        2000\n      );\n    }\n  \n    tick() {\n      let {local} = this.state;\n      let url = \"http://worldtimeapi.org/api/timezone/\" + local;\n      fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result.datetime);\n          this.setState({\n            isLoaded: true,\n            date: result.datetime\n          });\n        },\n        // Nota: É importante lidar com os erros aqui\n        // em vez de um bloco catch() para não recebermos\n        // exceções de erros dos componentes.\n        (error) => {\n          this.setState({\n            isLoaded: false,\n            date: null,\n            error\n          });\n        }\n      )\n  }\n  \n    render() {\n      let {isLoaded, date, error, local} = this.state;\n      if (error) {\n        return (<div>\n          <h2>World clock :/ ({error.message})</h2>\n        </div>)\n      } else if (!isLoaded) {\n        return (<div>\n          <h2>World clock is loading...</h2>\n        </div>)\n      } else {\n        return (\n          <div>\n            <h2>{local ? local : \"World clock\"} is {date}.</h2>\n          </div>\n        );\n      }\n    }\n}\n\nexport default WorldClock;"]},"metadata":{},"sourceType":"module"}